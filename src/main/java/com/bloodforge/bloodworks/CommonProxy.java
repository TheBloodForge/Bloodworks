package com.bloodforge.bloodworks;

import com.bloodforge.bloodworks.Networking.PacketManager;
import com.bloodforge.bloodworks.Registry.RecipeRegistry;
import net.minecraft.data.DataGenerator;
import net.minecraftforge.common.data.ExistingFileHelper;
import net.minecraftforge.data.event.GatherDataEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;

@SuppressWarnings("unused")
@Mod.EventBusSubscriber(modid = Globals.MODID, bus = Mod.EventBusSubscriber.Bus.MOD)
public class CommonProxy
{

    public static void commonSetup(final FMLCommonSetupEvent event)
    {
        // Some common setup code
        Globals.LogInfo("Initializing Common.");
        RecipeRegistry.init();
        PacketManager.register();
    }

    @SubscribeEvent
    public static void gatherData(GatherDataEvent event) {
        DataGenerator gen = event.getGenerator();
        ExistingFileHelper existingFileHelper = event.getExistingFileHelper();
        //Client side data generators
//        gen.addProvider(event.includeClient(), new LangProvider(gen));
//        gen.addProvider(event.includeClient(), new TextureProvider(gen, existingFileHelper));
//        gen.addProvider(event.includeClient(), new SoundProvider(gen, existingFileHelper));
        //Let the blockstate provider see models generated by the item model provider
//        ItemModelProvider itemModelProvider = new ItemModelProvider(gen, existingFileHelper);
//        gen.addProvider(event.includeClient(), itemModelProvider);
//        gen.addProvider(event.includeClient(), new BlockStateProvider(gen, itemModelProvider.existingFileHelper));


        //Server side data generators
//        gen.addProvider(event.includeServer(), new TagProvider(gen, existingFileHelper));
//        gen.addProvider(event.includeServer(), new LootProvider(gen));
//        gen.addProvider(event.includeServer(), new BiomeModifierProvider(gen));
//        gen.addProvider(event.includeServer(), new RecipeProvider(gen, existingFileHelper));
//        gen.addProvider(event.includeServer(), new AdvancementProvider(gen, existingFileHelper));
    }
}